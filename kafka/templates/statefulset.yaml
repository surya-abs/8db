{{- if .Values.kafka.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  serviceName: kafka-headless
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}"
          imagePullPolicy: {{ .Values.kafka.image.pullPolicy }}
          ports:
            - containerPort: 9092
              name: kafka
            - containerPort: 9093
              name: controller
          env:
            - name: MY_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: KAFKA_KRAFT_MODE
              value: "true"
            - name: KAFKA_CFG_NODE_ID
              value: "1"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "1@kafka-0.kafka-headless.k.svc.cluster.local:9093"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "SASL_PLAINTEXT:SASL_PLAINTEXT,CONTROLLER:PLAINTEXT"
            - name: KAFKA_CFG_LISTENERS
              value: "SASL_PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "SASL_PLAINTEXT://$(MY_NODE_IP):31092"
            - name: KAFKA_CFG_SASL_ENABLED_MECHANISMS
              value: "PLAIN"
            - name: KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL
              value: "PLAIN"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "SASL_PLAINTEXT"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_OPTS
              value: "-Djava.security.auth.login.config=/bitnami/kafka/config/jaas.conf"
          envFrom:
            - secretRef:
                name: kafka-secret
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
            - name: kafka-jaas
              mountPath: /bitnami/kafka/config/jaas.conf
              subPath: jaas.conf
      volumes:
        - name: kafka-jaas
          configMap:
            name: kafka-jaas-config
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.kafka.broker.storage.size }}
{{- end }}
