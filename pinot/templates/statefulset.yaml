{{- if .Values.pinot.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pinot
  labels:
    app: pinot
spec:
  serviceName: pinot
  replicas: {{ .Values.pinot.replicas }}
  selector:
    matchLabels:
      app: pinot
  template:
    metadata:
      labels:
        app: pinot
    spec:
      containers:
      - name: pinot
        image: "{{ .Values.pinot.image.repository }}:{{ .Values.pinot.image.tag }}"
        imagePullPolicy: {{ .Values.pinot.image.pullPolicy }}
        ports:
        - containerPort: 9000
          name: controller
        - containerPort: 8099
          name: broker
        - containerPort: 8098
          name: server
        command:
        - sh
        - -c
        - |
          # Start Pinot in Helix Mode (single process with all components)
          bin/pinot-admin.sh QuickStart \
            -type hybrid \
            -dataDir /var/pinot/data
        resources:
          {{- toYaml .Values.pinot.resources | nindent 10 }}
        volumeMounts:
        - name: pinot-storage
          mountPath: /var/pinot/data
        envFrom:
        - secretRef:
            name: pinot-secret
  volumeClaimTemplates:
  - metadata:
      name: pinot-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      {{- if .Values.pinot.storage.storageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.pinot.storage.size }}
{{- end }}